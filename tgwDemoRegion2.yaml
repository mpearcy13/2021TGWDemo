Description:  This template deploys a VPC with a single EC2 instance.  This environment can be used as a second region for the Transit Gateway, allowing connectivity between regions.

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String

  Vpc3ProdCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.50.4.0/22

  Vpc3SubnetPrivateCIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.50.4.0/24

  Key:
    Description: Key to access the instances.
    Type: String
    Default: TestKey

  AMI:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

Resources:

# Private PVC 1 with EC2 Instance

  VPC3Private:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref Vpc3ProdCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} VPC3 Production

  VPC3SubnetPrivate:
  #PrivateSubnet4:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC3Private
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: !Ref Vpc3SubnetPrivateCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} VPC3SubnetPrivate (AZ1)

  VPC3SecGrp1:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "ingress-icmp"
      GroupDescription: "Security group with ICMP ingress rule"
      VpcId: !Ref VPC3Private
      SecurityGroupIngress:
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} VPC3SecGrp

  VPC3ec2Instance1:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId:  !Ref AMI
      InstanceType: t3.micro
      KeyName: !Ref Key
      SubnetId: !Ref VPC3SubnetPrivate
      SecurityGroupIds:
        - Ref: VPC3SecGrp1
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 32
      Tags:
        -
          Key: Name
          Value: ec2Prod1R2

  VPC3RouteTablePrivate:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC3Private
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} RT VPC3 RT Private

  VPC3SubnetPrivateRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref VPC3RouteTablePrivate
      SubnetId: !Ref VPC3SubnetPrivate

Outputs:
  VPC3Private:
    Description: Private VPC.
    Value: !Ref VPC3Private

  VPC3SubnetPrivate:
    Description: A reference to the private subnet in the 1st Availability Zone
    Value: !Ref VPC3SubnetPrivate

  VPC3ec2Instance1:
    Description: EC2 Instance ID for instance associated to VPC3.
    Value: !Ref VPC3ec2Instance1

  VPC3SecGrp1:
    Description: Security group with ICMP ingress only.
    Value: !Ref VPC3SecGrp1
