Description:  This template deploys a VPC, with a pair of public and private subnets spread
  across two Availability Zones. It deploys an internet gateway, with a default
  route on the public subnets. It deploys a pair of NAT gateways (one in each AZ),
  and default routes for them in the private subnets.  Based on https://docs.aws.amazon.com/codebuild/latest/userguide/cloudformation-vpc-template.html

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String

  Vpc4ProdCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.50.4.0/22

  Vpc4SubnetPrivateCIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.50.4.0/24

  Key:
    Description: Key to access the instances.
    Type: String
    Default: TestKey

  AMI:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

Resources:

# Private PVC 1 with EC2 Instance

  VPC4Private:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref Vpc4ProdCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} VPC4 Production

  PrivateSubnet4:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC4Private
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: !Ref Vpc4SubnetPrivateCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} VPC4 SnPrProd1 (AZ1)

  ICMPIngressSecurityGroup4:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "icmp-ingress-private1-sg"
      GroupDescription: "Security group with ICMP ingress rule"
      VpcId: !Ref VPC4Private
      SecurityGroupIngress:
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} VPC4 Security Group

  ec2Instance4:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId:  !Ref AMI
      InstanceType: t3.medium
      KeyName: !Ref Key
      SubnetId: !Ref PrivateSubnet4
      SecurityGroupIds:
        - Ref: ICMPIngressSecurityGroup4
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 32
      Tags:
        -
          Key: Name
          Value: ec2Prod1R2



Outputs:
  VPC4Private:
    Description: A reference to the created VPC
    Value: !Ref VPC4Private

  PrivateSubnet4:
    Description: A reference to the private subnet in the 1st Availability Zone
    Value: !Ref PrivateSubnet4

  ec2Instance4:
    Description: EC2 Instance ID
    Value: !Ref ec2Instance4

  ICMPIngressSecurityGroup4:
    Description: Security group with ICMP ingress only.
    Value: !Ref ICMPIngressSecurityGroup4
